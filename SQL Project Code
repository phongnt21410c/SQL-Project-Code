Source: https://8weeksqlchallenge.com/case-study-1/ ##8WeekSQLChallenge
CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');


CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');


CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

  -- 1. What is the total amount each customer spent at the restaurant?

  SELECT customer_id, SUM(price) as customer_spent
  FROM dannys_diner.sales as s
  LEFT JOIN dannys_diner.menu as m
  ON s.product_id=m.product_id
  GROUP BY 1;

  -- 2. How many days has each customer visited the restaurant?
  SELECT COUNT(DISTINCT order_date) as days, customer_id
  FROM dannys_diner.sales
  group by 2;

  -- 3. What was the first item from the menu purchased by each customer?
  SELECT DISTINCT t1.customer_id, m.product_name
  FROM
  (SELECT customer_id, order_date, product_id,
  DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date)
  FROM dannys_diner.sales) as t1
  INNER JOIN dannys_diner.menu as m
  ON t1.product_id=m.product_id
  WHERE dense_rank=1
  ORDER BY customer_id
    
  -- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT product_name, count(*)
 FROM dannys_diner.sales as s
 LEFT JOIN dannys_diner.menu as m
 ON s.product_id=m.product_id
 GROUP BY 1;

 -- 5. Which item was the most popular for each customer?
 WITH t2 as (SELECT customer_id, product_id,DENSE_RANK()
OVER(PARTITION BY customer_id ORDER BY num desc)
FROM
(SELECT customer_id,product_id, count(product_id) as num
FROM dannys_diner.sales
GROUP BY 1,2) as t1
group by 1,2,num)
SELECT customer_id,product_name
FROM t2
JOIN dannys_diner.menu m
ON t2.product_id=m.product_id
WHERE t2.dense_rank=1
ORDER BY customer_id;

-- 6. Which item was purchased first by the customer after they became a member?
 SELECT t1.customer_id, product_name
 FROM (SELECT s.customer_id,  MIN(order_date)
 FROM dannys_diner.sales s
 JOIN dannys_diner.members m
 USING (customer_id)
 WHERE order_date>join_date
 GROUP BY 1) as t1
 JOIN dannys_diner.sales s
 ON t1.customer_id=s.customer_id AND t1.min=s.order_date
 JOIN dannys_diner.menu m
 ON s.product_id=m.product_iD;

 -- 7. Which item was purchased just before the customer became a member?
 SELECT DISTINCT product_name
 FROM dannys_diner.sales s
 JOIN dannys_diner.members m
 USING (customer_id)
 JOIN dannys_diner.menu
 USING (product_id)
 WHERE order_date<join_date
   
 -- 8. What is the total items and amount spent for each member before they became a member?
SELECT customer_id, product_name, count(*),sum(price)
 FROM dannys_diner.sales s
 JOIN dannys_diner.members m
 USING (customer_id)
 JOIN dannys_diner.menu
 USING (product_id)
 WHERE order_date<join_date
 GROUP BY 1,2
 ORDER BY 1
   
 -- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
WITH t2 as (SELECT customer_id, CASE WHEN product_name!='sushi' THEN (customer_spent*10)  ELSE (customer_spent*20) END AS points
FROM
(SELECT customer_id, product_name, SUM(price) as customer_spent
  FROM dannys_diner.sales as s
  LEFT JOIN dannys_diner.menu as m
  ON s.product_id=m.product_id
  GROUP BY 1,2) as t1)
 SELECT customer_id, SUM(points) as points
 FROM t2
 GROUP BY 1
   
 -- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

WITH t1 as (SELECT customer_id, order_date, SUM(price*20) AS points
 FROM dannys_diner.sales s
 JOIN dannys_diner.members me
 USING (customer_id)
 JOIN dannys_diner.menu m
 USING(product_id)
 WHERE order_date BETWEEN join_date AND join_date + interval '7 days'
 group by 1,2
 UNION
 SELECT customer_id, order_date,CASE WHEN product_name!='sushi' THEN SUM(price*10) ELSE SUM(price*20) END AS points
 FROM dannys_diner.sales s
 JOIN dannys_diner.members me
 USING (customer_id)
 JOIN dannys_diner.menu m
 USING(product_id)
 WHERE order_date NOT IN
 (SELECT order_date
  FROM dannys_diner.sales s
  JOIN dannys_diner.members me
 USING (customer_id)
 WHERE order_date BETWEEN join_date AND join_date + interval '7 days')
 GROUP BY 1,2,product_name)
 SELECT customer_id, sum(points)
 FROM t1
 WHERE order_date<='2021-01-31'
 GROUP BY 1
